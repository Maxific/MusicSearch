{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\react\\\\music-project\\\\src\\\\components\\\\ListAlbums.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ListAlbums extends React.Component {\n  render() {\n    const {\n      response,\n      artistInput\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albumsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result\",\n        children: [\"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u0430\\u043B\\u044C\\u0431\\u043E\\u043C\\u043E\\u0432:\", ' ', artistInput, ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listAlbums\",\n        children: response.map((album, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/album/${album.collectionId}`,\n            \"data-testid\": `link-to-album-${album.collectionId}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: album.artworkUrl100,\n              alt: \"Album\",\n              className: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: album.collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: album.artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n}\nListAlbums.propTypes = {\n  response: PropTypes.arrayOf(PropTypes.object).isRequired,\n  artistInput: PropTypes.string.isRequired\n};\nexport default ListAlbums;","map":{"version":3,"names":["React","Link","PropTypes","ListAlbums","Component","render","response","artistInput","props","map","album","index","collectionId","artworkUrl100","collectionName","artistName","propTypes","arrayOf","object","isRequired","string"],"sources":["C:/Сайты/react/music-project/src/components/ListAlbums.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ListAlbums extends React.Component {\n  render() {\n    const { response, artistInput } = this.props;\n    return (\n      <div className=\"albumsContainer\">\n        <p className=\"result\">\n          Результаты альбомов:\n          {' '}\n          {artistInput}\n          {' '}\n        </p>\n        <div className=\"listAlbums\">\n          { response.map((album, index) => (\n            <div key={ index } className=\"album\">\n             <Link \n                to={ `/album/${album.collectionId}` }\n                data-testid={ `link-to-album-${album.collectionId}` }> \n                <img src={ album.artworkUrl100 } alt=\"Album\" className=\"img\" />\n             </Link>\n              <h2>{album.collectionName}</h2>\n              <h3>{album.artistName}</h3>\n              {/* <Link\n                to={ `/album/${album.collectionId}` }\n                data-testid={ `link-to-album-${album.collectionId}` }\n              >\n               Более\n              </Link> */}\n            </div>\n          )) }\n        </div>\n      </div>\n    );\n  }\n}\n\nListAlbums.propTypes = {\n  response: PropTypes.arrayOf(PropTypes.object).isRequired,\n  artistInput: PropTypes.string.isRequired,\n};\n\nexport default ListAlbums;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,YAAY;AAAC;AAEnC,MAAMC,UAAU,SAASH,KAAK,CAACI,SAAS,CAAC;EACvCC,MAAM,GAAG;IACP,MAAM;MAAEC,QAAQ;MAAEC;IAAY,CAAC,GAAG,IAAI,CAACC,KAAK;IAC5C,oBACE;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QAAG,SAAS,EAAC,QAAQ;QAAA,6HAElB,GAAG,EACHD,WAAW,EACX,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eACJ;QAAK,SAAS,EAAC,YAAY;QAAA,UACvBD,QAAQ,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1B;UAAmB,SAAS,EAAC,OAAO;UAAA,wBACnC,QAAC,IAAI;YACF,EAAE,EAAI,UAASD,KAAK,CAACE,YAAa,EAAG;YACrC,eAAe,iBAAgBF,KAAK,CAACE,YAAa,EAAG;YAAA,uBACrD;cAAK,GAAG,EAAGF,KAAK,CAACG,aAAe;cAAC,GAAG,EAAC,OAAO;cAAC,SAAS,EAAC;YAAK;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAC3D,eACN;YAAA,UAAKH,KAAK,CAACI;UAAc;YAAA;YAAA;YAAA;UAAA,QAAM,eAC/B;YAAA,UAAKJ,KAAK,CAACK;UAAU;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAPlBJ,KAAK;UAAA;UAAA;UAAA;QAAA,QAejB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEAR,UAAU,CAACa,SAAS,GAAG;EACrBV,QAAQ,EAAEJ,SAAS,CAACe,OAAO,CAACf,SAAS,CAACgB,MAAM,CAAC,CAACC,UAAU;EACxDZ,WAAW,EAAEL,SAAS,CAACkB,MAAM,CAACD;AAChC,CAAC;AAED,eAAehB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}