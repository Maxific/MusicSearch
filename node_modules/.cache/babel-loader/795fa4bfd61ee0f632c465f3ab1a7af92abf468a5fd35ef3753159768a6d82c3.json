{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\react\\\\music-project\\\\src\\\\pages\\\\Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.fetchMusics = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const songs = await getMusics(id);\n      const info = songs[0];\n      this.setState({\n        info,\n        songs\n      });\n    };\n    this.state = {\n      info: {},\n      songs: []\n    };\n  }\n  componentDidMount() {\n    this.fetchMusics();\n  }\n  render() {\n    const {\n      info,\n      songs\n    } = this.state;\n    const {\n      artistName,\n      collectionName,\n      artworkUrl100\n    } = info;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divAlbum\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          \"data-testid\": \"artist-name\",\n          children: artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"album-name\",\n          children: collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artworkUrl100,\n          alt: collectionName,\n          className: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: songs.filter(song => song !== info).map(song => /*#__PURE__*/_jsxDEV(MusicCard, {\n              song: song\n            }, song.trackId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.objectOf(PropTypes.string).isRequired\n};\nexport default Album;","map":{"version":3,"names":["React","PropTypes","Header","MusicCard","getMusics","Album","Component","constructor","fetchMusics","match","params","id","props","songs","info","setState","state","componentDidMount","render","artistName","collectionName","artworkUrl100","filter","song","map","trackId","propTypes","objectOf","string","isRequired"],"sources":["C:/Сайты/react/music-project/src/pages/Album.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      info: {},\n      songs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMusics();\n  }\n\n  fetchMusics = async () => {\n    const { match: { params: { id } } } = this.props;\n    const songs = await getMusics(id);\n    const info = songs[0];\n    this.setState({ info, songs });\n  }\n\n  render() {\n    const { info, songs } = this.state;\n    const { artistName, collectionName, artworkUrl100 } = info;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <div className=\"divAlbum\">\n          <h1 data-testid=\"artist-name\">{artistName}</h1>\n          <h2 data-testid=\"album-name\">{collectionName}</h2>\n          <img src={ artworkUrl100 } alt={ collectionName } className=\"teste\" />\n          <ul>\n            <li>\n              {songs.filter((song) => song !== info)\n                .map((song) => (<MusicCard\n                  song={ song }\n                  key={ song.trackId }\n                />))}\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Album;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,uBAAuB;AAAC;AAE9C,MAAMC,KAAK,SAASL,KAAK,CAACM,SAAS,CAAC;EAClCC,WAAW,GAAG;IACZ,KAAK,EAAE;IAAC,KAYVC,WAAW,GAAG,YAAY;MACxB,MAAM;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAE;YAAEC;UAAG;QAAE;MAAE,CAAC,GAAG,IAAI,CAACC,KAAK;MAChD,MAAMC,KAAK,GAAG,MAAMT,SAAS,CAACO,EAAE,CAAC;MACjC,MAAMG,IAAI,GAAGD,KAAK,CAAC,CAAC,CAAC;MACrB,IAAI,CAACE,QAAQ,CAAC;QAAED,IAAI;QAAED;MAAM,CAAC,CAAC;IAChC,CAAC;IAfC,IAAI,CAACG,KAAK,GAAG;MACXF,IAAI,EAAE,CAAC,CAAC;MACRD,KAAK,EAAE;IACT,CAAC;EACH;EAEAI,iBAAiB,GAAG;IAClB,IAAI,CAACT,WAAW,EAAE;EACpB;EASAU,MAAM,GAAG;IACP,MAAM;MAAEJ,IAAI;MAAED;IAAM,CAAC,GAAG,IAAI,CAACG,KAAK;IAClC,MAAM;MAAEG,UAAU;MAAEC,cAAc;MAAEC;IAAc,CAAC,GAAGP,IAAI;IAC1D,oBACE;MAAK,eAAY,YAAY;MAAA,wBAC3B,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAK,SAAS,EAAC,UAAU;QAAA,wBACvB;UAAI,eAAY,aAAa;UAAA,UAAEK;QAAU;UAAA;UAAA;UAAA;QAAA,QAAM,eAC/C;UAAI,eAAY,YAAY;UAAA,UAAEC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAM,eAClD;UAAK,GAAG,EAAGC,aAAe;UAAC,GAAG,EAAGD,cAAgB;UAAC,SAAS,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACtE;UAAA,uBACE;YAAA,UACGP,KAAK,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKT,IAAI,CAAC,CACnCU,GAAG,CAAED,IAAI,iBAAM,QAAC,SAAS;cACxB,IAAI,EAAGA;YAAM,GACPA,IAAI,CAACE,OAAO;cAAA;cAAA;cAAA;YAAA,QACjB;UAAC;YAAA;YAAA;YAAA;UAAA;QACH;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEApB,KAAK,CAACqB,SAAS,GAAG;EAChBjB,KAAK,EAAER,SAAS,CAAC0B,QAAQ,CAAC1B,SAAS,CAAC2B,MAAM,CAAC,CAACC;AAC9C,CAAC;AAED,eAAexB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}