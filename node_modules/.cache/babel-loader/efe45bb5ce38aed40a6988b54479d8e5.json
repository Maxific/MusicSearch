{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0421\\u0430\\u0439\\u0442\\u044B\\\\react\\\\trybe-trybetunes-master\\\\src\\\\components\\\\ListAlbums.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListAlbums extends React.Component {\n  render() {\n    const {\n      response,\n      artistInput\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result\",\n        children: [\"Resultado de \\xE1lbuns de:\", ' ', artistInput, ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listAlbums\",\n        children: response.map((album, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: album.artworkUrl100,\n            alt: \"\\xC1lbum\",\n            className: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: album.collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: album.artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/album/${album.collectionId}`,\n            \"data-testid\": `link-to-album-${album.collectionId}`,\n            children: \"Mais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nListAlbums.propTypes = {\n  response: PropTypes.arrayOf(PropTypes.object).isRequired,\n  artistInput: PropTypes.string.isRequired\n};\nexport default ListAlbums;","map":{"version":3,"names":["React","Link","PropTypes","ListAlbums","Component","render","response","artistInput","props","map","album","index","artworkUrl100","collectionName","artistName","collectionId","propTypes","arrayOf","object","isRequired","string"],"sources":["C:/Сайты/react/trybe-trybetunes-master/src/components/ListAlbums.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ListAlbums extends React.Component {\n  render() {\n    const { response, artistInput } = this.props;\n    return (\n      <div>\n        <p className=\"result\">\n          Resultado de álbuns de:\n          {' '}\n          {artistInput}\n          {' '}\n        </p>\n        <div className=\"listAlbums\">\n          { response.map((album, index) => (\n            <div key={ index } className=\"album\">\n              <img src={ album.artworkUrl100 } alt=\"Álbum\" className=\"img\" />\n              <h2>{album.collectionName}</h2>\n              <h3>{album.artistName}</h3>\n              <Link\n                to={ `/album/${album.collectionId}` }\n                data-testid={ `link-to-album-${album.collectionId}` }\n              >\n                Mais\n              </Link>\n            </div>\n          )) }\n        </div>\n      </div>\n    );\n  }\n}\n\nListAlbums.propTypes = {\n  response: PropTypes.arrayOf(PropTypes.object).isRequired,\n  artistInput: PropTypes.string.isRequired,\n};\n\nexport default ListAlbums;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;EACvCC,MAAM,GAAG;IACP,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAA4B,KAAKC,KAAvC;IACA,oBACE;MAAA,wBACE;QAAG,SAAS,EAAC,QAAb;QAAA,yCAEG,GAFH,EAGGD,WAHH,EAIG,GAJH;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAK,SAAS,EAAC,YAAf;QAAA,UACID,QAAQ,CAACG,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,kBACb;UAAmB,SAAS,EAAC,OAA7B;UAAA,wBACE;YAAK,GAAG,EAAGD,KAAK,CAACE,aAAjB;YAAiC,GAAG,EAAC,UAArC;YAA6C,SAAS,EAAC;UAAvD;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAKF,KAAK,CAACG;UAAX;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,UAAKH,KAAK,CAACI;UAAX;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE,QAAC,IAAD;YACE,EAAE,EAAI,UAASJ,KAAK,CAACK,YAAa,EADpC;YAEE,eAAe,iBAAgBL,KAAK,CAACK,YAAa,EAFpD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA,GAAWJ,KAAX;UAAA;UAAA;UAAA;QAAA,QADA;MADJ;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAyBD;;AA5BsC;;AA+BzCR,UAAU,CAACa,SAAX,GAAuB;EACrBV,QAAQ,EAAEJ,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,MAA5B,EAAoCC,UADzB;EAErBZ,WAAW,EAAEL,SAAS,CAACkB,MAAV,CAAiBD;AAFT,CAAvB;AAKA,eAAehB,UAAf"},"metadata":{},"sourceType":"module"}