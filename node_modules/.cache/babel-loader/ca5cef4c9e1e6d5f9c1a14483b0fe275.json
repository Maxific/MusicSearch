{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCCseC7qLgQHx9aYsoaga_4qjWA27whvFc\",\n  authDomain: \"movie-rec-67232.firebaseapp.com\",\n  projectId: \"movie-rec-67232\",\n  storageBucket: \"movie-rec-67232.appspot.com\",\n  messagingSenderId: \"640850592368\",\n  appId: \"1:640850592368:web:506c6d7cc202fbe91eaab5\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nexport { auth, db, signInWithGoogle, logInWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordReset, logout }; // // Import the functions you need from the SDKs you need\n// import { initializeApp } from \"firebase/app\";\n// // TODO: Add SDKs for Firebase products that you want to use\n// // https://firebase.google.com/docs/web/setup#available-libraries\n// // Your web app's Firebase configuration\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyCCseC7qLgQHx9aYsoaga_4qjWA27whvFc\",\n//   authDomain: \"movie-rec-67232.firebaseapp.com\",\n//   projectId: \"movie-rec-67232\",\n//   storageBucket: \"movie-rec-67232.appspot.com\",\n//   messagingSenderId: \"640850592368\",\n//   appId: \"1:640850592368:web:506c6d7cc202fbe91eaab5\"\n// };\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);","map":{"version":3,"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","googleProvider","signInWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","err","console","error","alert","message","logInWithEmailAndPassword","password","registerWithEmailAndPassword","sendPasswordReset","logout"],"sources":["C:/Сайты/react/music-project/src/pages/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n\r\nimport {\r\n  GoogleAuthProvider,\r\n  getAuth,\r\n  signInWithPopup,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n  signOut,\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n  getFirestore,\r\n  query,\r\n  getDocs,\r\n  collection,\r\n  where,\r\n  addDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCCseC7qLgQHx9aYsoaga_4qjWA27whvFc\",\r\n  authDomain: \"movie-rec-67232.firebaseapp.com\",\r\n  projectId: \"movie-rec-67232\",\r\n  storageBucket: \"movie-rec-67232.appspot.com\",\r\n  messagingSenderId: \"640850592368\",\r\n  appId: \"1:640850592368:web:506c6d7cc202fbe91eaab5\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await signInWithPopup(auth, googleProvider);\r\n    const user = res.user;\r\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\r\n    const docs = await getDocs(q);\r\n    if (docs.docs.length === 0) {\r\n      await addDoc(collection(db, \"users\"), {\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    await signInWithEmailAndPassword(auth, email, password);\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = res.user;\r\n    await addDoc(collection(db, \"users\"), {\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: \"local\",\r\n      email,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst sendPasswordReset = async (email) => {\r\n  try {\r\n    await sendPasswordResetEmail(auth, email);\r\n    alert(\"Password reset link sent!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\nconst logout = () => {\r\n  signOut(auth);\r\n};\r\n\r\nexport {\r\n  auth,\r\n  db,\r\n  signInWithGoogle,\r\n  logInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  sendPasswordReset,\r\n  logout,\r\n};\r\n\r\n// // Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\";\r\n// // TODO: Add SDKs for Firebase products that you want to use\r\n// // https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// // Your web app's Firebase configuration\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyCCseC7qLgQHx9aYsoaga_4qjWA27whvFc\",\r\n//   authDomain: \"movie-rec-67232.firebaseapp.com\",\r\n//   projectId: \"movie-rec-67232\",\r\n//   storageBucket: \"movie-rec-67232.appspot.com\",\r\n//   messagingSenderId: \"640850592368\",\r\n//   appId: \"1:640850592368:web:506c6d7cc202fbe91eaab5\"\r\n// };\r\n\r\n// // Initialize Firebase\r\n// const app = initializeApp(firebaseConfig);"],"mappings":"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"},"metadata":{},"sourceType":"module"}